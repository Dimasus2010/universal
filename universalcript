-- Universal Game Enhancer with Sliders
local player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local settings = {
    fly = false,
    noclip = false,
    esp = false,
    speed = false,
    jump = false,
    xray = false,
    infJump = false,
    antiAfk = false,
    guiVisible = true,
    flySpeed = 50,
    walkSpeed = 50,
    jumpPower = 100
}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local flyConnection, noclipConnection, espConnection, antiAfkConnection
local bodyGyro, bodyVelocity
local originalWalkspeed, originalJumppower

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local gui = Instance.new("ScreenGui")
gui.Name = "UniversalEnhancer"
gui.Parent = player.PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 350, 0, 500)
mainFrame.Position = UDim2.new(0, 10, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = settings.guiVisible
mainFrame.Parent = gui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = mainFrame

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 25)
titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
titleBar.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Text = "üéÆ UNIVERSAL ENHANCER"
title.Size = UDim2.new(1, 0, 1, 0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 12
title.Parent = titleBar

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function createToggleButton(text, yPosition, toggleFunction)
    local button = Instance.new("TextButton")
    button.Text = "‚ùå " .. text
    button.Size = UDim2.new(0.9, 0, 0, 35)
    button.Position = UDim2.new(0.05, 0, 0, yPosition)
    button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Gotham
    button.TextSize = 11
    button.Parent = mainFrame
    
    button.MouseButton1Click:Connect(function()
        local currentState = settings[string.lower(string.match(text, "%a+"))]
        toggleFunction(not currentState)
    end)
    
    return button
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∑—É–Ω–∫–∞
function createSlider(text, yPosition, minValue, maxValue, defaultValue, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0.9, 0, 0, 50)
    sliderFrame.Position = UDim2.new(0.05, 0, 0, yPosition)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = mainFrame
    
    local label = Instance.new("TextLabel")
    label.Text = text .. ": " .. defaultValue
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.Gotham
    label.TextSize = 11
    label.Parent = sliderFrame
    
    local sliderBackground = Instance.new("Frame")
    sliderBackground.Size = UDim2.new(1, 0, 0, 15)
    sliderBackground.Position = UDim2.new(0, 0, 0, 25)
    sliderBackground.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    sliderBackground.BorderSizePixel = 0
    sliderBackground.Parent = sliderFrame
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 7)
    sliderCorner.Parent = sliderBackground
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBackground
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 7)
    fillCorner.Parent = sliderFill
local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new((defaultValue - minValue) / (maxValue - minValue), -10, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderButton.Text = ""
    sliderButton.BorderSizePixel = 0
    sliderButton.Parent = sliderBackground
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = sliderButton
    
    -- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–∑—É–Ω–∫–∞
    local function updateSlider(value)
        local normalized = math.clamp((value - minValue) / (maxValue - minValue), 0, 1)
        sliderFill.Size = UDim2.new(normalized, 0, 1, 0)
        sliderButton.Position = UDim2.new(normalized, -10, 0.5, -10)
        label.Text = text .. ": " .. math.floor(value)
        callback(value)
    end
    
    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ü–ö
    local dragging = false
    
    sliderButton.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UIS.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local relativeX = (input.Position.X - sliderBackground.AbsolutePosition.X) / sliderBackground.AbsoluteSize.X
            local value = minValue + (relativeX * (maxValue - minValue))
            updateSlider(math.clamp(value, minValue, maxValue))
        end
    end)
    
    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    sliderBackground.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            local relativeX = (input.Position.X - sliderBackground.AbsolutePosition.X) / sliderBackground.AbsoluteSize.X
            local value = minValue + (relativeX * (maxValue - minValue))
            updateSlider(math.clamp(value, minValue, maxValue))
        end
    end)
    
    return {
        update = updateSlider,
        setValue = function(value)
            updateSlider(math.clamp(value, minValue, maxValue))
        end
    }
end

-- FLY SYSTEM
function toggleFly(enabled)
    settings.fly = enabled
    updateButton("fly", enabled)
    
    if enabled then
        local character = player.Character
        if not character then return end
        
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end
        
        bodyGyro = Instance.new("BodyGyro")
        bodyGyro.P = 1000
        bodyGyro.D = 50
        bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)
        bodyGyro.CFrame = humanoidRootPart.CFrame
        bodyGyro.Parent = humanoidRootPart
        
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Parent = humanoidRootPart
        
        flyConnection = RunService.Heartbeat:Connect(function()
            if not settings.fly or not character:FindFirstChild("HumanoidRootPart") then return end
            
            local camera = workspace.CurrentCamera
            local newVelocity = Vector3.new(0, 0, 0)
            
            if UIS:IsKeyDown(Enum.KeyCode.W) then
                newVelocity = newVelocity + camera.CFrame.LookVector * settings.flySpeed
            end
            if UIS:IsKeyDown(Enum.KeyCode.S) then
                newVelocity = newVelocity - camera.CFrame.LookVector * settings.flySpeed
            end
            if UIS:IsKeyDown(Enum.KeyCode.A) then
                newVelocity = newVelocity - camera.CFrame.RightVector * settings.flySpeed
end
            if UIS:IsKeyDown(Enum.KeyCode.D) then
                newVelocity = newVelocity + camera.CFrame.RightVector * settings.flySpeed
            end
            if UIS:IsKeyDown(Enum.KeyCode.Space) then
                newVelocity = newVelocity + Vector3.new(0, settings.flySpeed, 0)
            end
            if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
                newVelocity = newVelocity - Vector3.new(0, settings.flySpeed, 0)
            end
            
            bodyVelocity.Velocity = newVelocity
            bodyGyro.CFrame = camera.CFrame
        end)
        
    else
        if flyConnection then 
            flyConnection:Disconnect() 
            flyConnection = nil
        end
        if bodyGyro then 
            bodyGyro:Destroy() 
            bodyGyro = nil
        end
        if bodyVelocity then 
            bodyVelocity:Destroy() 
            bodyVelocity = nil
        end
    end
end

-- SPEED BOOST
function toggleSpeed(enabled)
    settings.speed = enabled
    updateButton("speed", enabled)
    
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    if enabled then
        originalWalkspeed = character.Humanoid.WalkSpeed
        character.Humanoid.WalkSpeed = settings.walkSpeed
    else
        if originalWalkspeed then
            character.Humanoid.WalkSpeed = originalWalkspeed
        else
            character.Humanoid.WalkSpeed = 16
        end
    end
end

-- HIGH JUMP
function toggleJump(enabled)
    settings.jump = enabled
    updateButton("jump", enabled)
    
    local character = player.Character
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    if enabled then
        originalJumppower = character.Humanoid.JumpPower
        character.Humanoid.JumpPower = settings.jumpPower
    else
        if originalJumppower then
            character.Humanoid.JumpPower = originalJumppower
        else
            character.Humanoid.JumpPower = 50
        end
    end
end

-- –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (NOCLIP, ESP, etc.) –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–∫–∏–º–∏ –∂–µ –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Å–∫—Ä–∏–ø—Ç–µ
-- NOCLIP SYSTEM
function toggleNoclip(enabled)
    settings.noclip = enabled
    updateButton("noclip", enabled)
    
    if enabled then
        noclipConnection = RunService.Stepped:Connect(function()
            if player.Character and settings.noclip then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then 
            noclipConnection:Disconnect() 
            noclipConnection = nil
        end
        if player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

-- ESP SYSTEM
function toggleESP(enabled)
    settings.esp = enabled
    updateButton("esp", enabled)
    
    if enabled then
        espConnection = RunService.Heartbeat:Connect(function()
            if not settings.esp then return end
            
            for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character then
                    local character = otherPlayer.Character
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    
                    if humanoidRootPart and not humanoidRootPart:FindFirstChild("ESPBox") then
                        local espBox = Instance.new("BoxHandleAdornment")
                        espBox.Name = "ESPBox"
espBox.Adornee = humanoidRootPart
                        espBox.AlwaysOnTop = true
                        espBox.ZIndex = 10
                        espBox.Size = humanoidRootPart.Size
                        espBox.Transparency = 0.7
                        espBox.Color3 = Color3.fromRGB(255, 0, 0)
                        espBox.Parent = humanoidRootPart
                    end
                end
            end
        end)
    else
        if espConnection then 
            espConnection:Disconnect() 
            espConnection = nil
        end
        for _, otherPlayer in pairs(game.Players:GetPlayers()) do
            if otherPlayer.Character then
                local humanoidRootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart and humanoidRootPart:FindFirstChild("ESPBox") then
                    humanoidRootPart.ESPBox:Destroy()
                end
            end
        end
    end
end

-- INFINITE JUMP
function toggleInfJump(enabled)
    settings.infJump = enabled
    updateButton("infjump", enabled)
end

-- ANTI AFK
function toggleAntiAfk(enabled)
    settings.antiAfk = enabled
    updateButton("antiafk", enabled)
    
    if enabled then
        antiAfkConnection = RunService.Heartbeat:Connect(function()
            if settings.antiAfk then
                local virtualUser = game:GetService("VirtualUser")
                virtualUser:CaptureController()
                virtualUser:ClickButton2(Vector2.new())
            end
        end)
    else
        if antiAfkConnection then 
            antiAfkConnection:Disconnect() 
            antiAfkConnection = nil
        end
    end
end

-- X-RAY VISION
function toggleXray(enabled)
    settings.xray = enabled
    updateButton("xray", enabled)
    
    if enabled then
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 0.5 then
                part.LocalTransparencyModifier = 0.5
            end
        end
    else
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") then
                part.LocalTransparencyModifier = 0
            end
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function updateButton(buttonType, enabled)
    for _, button in pairs(mainFrame:GetChildren()) do
        if button:IsA("TextButton") then
            local buttonText = button.Text:lower()
            if buttonText:find(buttonType) then
                if enabled then
                    button.Text = "‚úÖ " .. string.sub(button.Text, 5)
                    button.BackgroundColor3 = Color3.fromRGB(0, 80, 0)
                else
                    button.Text = "‚ùå " .. string.sub(button.Text, 5)
                    button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                end
                break
            end
        end
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
local flyBtn = createToggleButton("FLY", 30, toggleFly)
local noclipBtn = createToggleButton("NOCLIP", 70, toggleNoclip)
local espBtn = createToggleButton("ESP PLAYERS", 110, toggleESP)
local speedBtn = createToggleButton("SPEED BOOST", 150, toggleSpeed)
local jumpBtn = createToggleButton("HIGH JUMP", 190, toggleJump)
local infJumpBtn = createToggleButton("INFINITE JUMP", 230, toggleInfJump)
local antiAfkBtn = createToggleButton("ANTI AFK", 270, toggleAntiAfk)
local xrayBtn = createToggleButton("X-RAY VISION", 310, toggleXray)

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∑—É–Ω–∫–æ–≤
local flySpeedSlider = createSlider("Fly Speed", 350, 10, 200, 50, function(value)
    settings.flySpeed = value
    if settings.fly then
        toggleFly(true) -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º fly —Å –Ω–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    end
end)

local walkSpeedSlider = createSlider("Walk Speed", 410, 16, 100, 50, function(value)
    settings.walkSpeed = value
    if settings.speed then
        toggleSpeed(true) -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º speed —Å –Ω–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    end
end)
local jumpPowerSlider = createSlider("Jump Power", 470, 50, 200, 100, function(value)
    settings.jumpPower = value
    if settings.jump then
        toggleJump(true) -- –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º jump —Å –Ω–æ–≤–æ–π —Å–∏–ª–æ–π
    end
end)

-- –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ GUI
local dragging = false
local dragInput, dragStart, startPos

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Hotkey: Right Shift –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è GUI
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.RightShift then
        settings.guiVisible = not settings.guiVisible
        mainFrame.Visible = settings.guiVisible
    end
end)

-- Infinite Jump –æ–±—Ä–∞–±–æ—Ç–∫–∞
UIS.JumpRequest:Connect(function()
    if settings.infJump and player.Character then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState("Jumping")
        end
    end
end)

-- –ê–≤—Ç–æ-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ä–µ—Å–ø–∞–≤–Ω–µ
player.CharacterAdded:Connect(function(character)
    wait(1)
    if settings.speed then toggleSpeed(true) end
    if settings.jump then toggleJump(true) end
    if settings.infJump then toggleInfJump(true) end
end)

print("üéÆ Universal Enhancer with Sliders Loaded!")
print("üéØ Hotkeys: Right Shift - Show/Hide GUI")
print("üìä Sliders: Fly Speed, Walk Speed, Jump Power")
print("üì± Works on both PC and Mobile!")
